/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stackergame;

import cern.colt.Arrays;
import com.sun.glass.events.KeyEvent;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Robot;
import static java.awt.event.KeyEvent.VK_SPACE;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author user
 */
public class GameBoard extends javax.swing.JFrame {

    public GameEngine engine;
    public int highScore = 0;
    private NeatAI ai;
    private Robot robo;
    public static boolean gameOver;
    private int gen = 1;
    /**
     * Creates new form GameBoard
     */
    public GameBoard() {
        initComponents();
        
        radNormal.setSelected(true);
        
        try {
            File highScoreFile = new File("highscore.txt");
            Scanner scan = new Scanner(highScoreFile);
            highScore = Integer.valueOf(scan.nextLine());
            lblHighScore.setText(String.valueOf(highScore));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GameBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.engine = new GameEngine(getGamePanel(), getLeftBorderPanel(), getRightBorderPanel());
        this.ai = new NeatAI(engine);
        
        JPanel scrollPanel = new JPanel();

        scrollPanel.setAutoscrolls(true);
        GamePanel.add(new JScrollPane(scrollPanel));



        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    }

    public void drawBaseBlock() {
        engine.setLeftBorder(leftBorderPanel);
        engine.setRightBorder(rightBorderPanel);
        engine.setGamePanel(GamePanel);
        Block base = new Block(50, 50);
        base.x = GamePanel.getWidth() / 2;
        base.y = GamePanel.getHeight() - 50;
        base.isBase = true;
        engine.setBaseBlock(base);
        engine.drawBlock(base);
        engine.timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblStackHeight = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblBlockSpeed = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblHighScore = new javax.swing.JLabel();
        leftBorderPanel = new javax.swing.JPanel();
        rightBorderPanel = new javax.swing.JPanel();
        GamePanel = new javax.swing.JPanel();
        btnNewGame = new javax.swing.JButton();
        btnTrainAI = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        radNormal = new javax.swing.JRadioButton();
        radHard = new javax.swing.JRadioButton();
        radInsane = new javax.swing.JRadioButton();
        radBroken = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        lblGen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Stack Height: ");

        lblStackHeight.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblStackHeight.setText("0");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Block speed: ");

        lblBlockSpeed.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblBlockSpeed.setText("0");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("High score: ");

        lblHighScore.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblHighScore.setText("0");

        leftBorderPanel.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout leftBorderPanelLayout = new javax.swing.GroupLayout(leftBorderPanel);
        leftBorderPanel.setLayout(leftBorderPanelLayout);
        leftBorderPanelLayout.setHorizontalGroup(
            leftBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        leftBorderPanelLayout.setVerticalGroup(
            leftBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        rightBorderPanel.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout rightBorderPanelLayout = new javax.swing.GroupLayout(rightBorderPanel);
        rightBorderPanel.setLayout(rightBorderPanelLayout);
        rightBorderPanelLayout.setHorizontalGroup(
            rightBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        rightBorderPanelLayout.setVerticalGroup(
            rightBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        GamePanel.setAutoscrolls(true);
        GamePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        GamePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GamePanelMouseClicked(evt);
            }
        });
        GamePanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GamePanelKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout GamePanelLayout = new javax.swing.GroupLayout(GamePanel);
        GamePanel.setLayout(GamePanelLayout);
        GamePanelLayout.setHorizontalGroup(
            GamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 528, Short.MAX_VALUE)
        );
        GamePanelLayout.setVerticalGroup(
            GamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnNewGame.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnNewGame.setText("New Game");
        btnNewGame.setFocusPainted(false);
        btnNewGame.setFocusable(false);
        btnNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewGameActionPerformed(evt);
            }
        });

        btnTrainAI.setText("Let AI Play\n& Learn");
        btnTrainAI.setFocusPainted(false);
        btnTrainAI.setFocusable(false);
        btnTrainAI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrainAIActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.setFocusPainted(false);
        btnExit.setFocusable(false);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Difficulty:");

        radNormal.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        radNormal.setText("Normal");
        radNormal.setFocusPainted(false);
        radNormal.setFocusable(false);
        radNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNormalActionPerformed(evt);
            }
        });

        radHard.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        radHard.setText("Hard");
        radHard.setFocusPainted(false);
        radHard.setFocusable(false);
        radHard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHardActionPerformed(evt);
            }
        });

        radInsane.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        radInsane.setText("Insane");
        radInsane.setFocusPainted(false);
        radInsane.setFocusable(false);
        radInsane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radInsaneActionPerformed(evt);
            }
        });

        radBroken.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        radBroken.setText("Broken");
        radBroken.setFocusPainted(false);
        radBroken.setFocusable(false);
        radBroken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBrokenActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Gen: ");

        lblGen.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStackHeight))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBlockSpeed))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblGen))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHighScore)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(leftBorderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightBorderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewGame, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(btnTrainAI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(radNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radHard, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radInsane, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(radBroken, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftBorderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rightBorderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblStackHeight))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lblBlockSpeed))
                        .addGap(213, 213, 213)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lblHighScore)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnNewGame, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTrainAI, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radNormal)
                        .addGap(18, 18, 18)
                        .addComponent(radHard)
                        .addGap(18, 18, 18)
                        .addComponent(radInsane)
                        .addGap(18, 18, 18)
                        .addComponent(radBroken, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblGen))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GamePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GamePanelMouseClicked

    }//GEN-LAST:event_GamePanelMouseClicked

    private void GamePanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GamePanelKeyPressed
        
    }//GEN-LAST:event_GamePanelKeyPressed

    private void handleGameOver() throws IOException
    {
        this.gameOver = true;
        if(engine.getScore() > highScore)
        {
            highScore = engine.getScore();
            BufferedWriter writer = new BufferedWriter(new FileWriter("highscore.txt"));
            String score = String.valueOf(highScore);
            writer.write(score);
            writer.close();
            lblHighScore.setText(String.valueOf(highScore));
            //JOptionPane.showMessageDialog(this, "Game Over!\n\nYour score: " + lblStackHeight.getText() + 
                    //"\n\nCONGRATULATIONS! YOU SET A NEW ALL-TIME HIGH SCORE!");
        }
        else {
        //JOptionPane.showMessageDialog(this, "Game Over!\n\nYour score: " + lblStackHeight.getText());
        }
        btnNewGame.doClick();
    }
    
    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            engine.timer.stop();

            Block currBlock = engine.getCurrBlock();

            Block newBlock = new Block(currBlock.getWidth(), currBlock.getHeight());
            newBlock.x = currBlock.x;
            newBlock.y = currBlock.y - newBlock.getHeight();
            
            

            if (currBlock.isBase) {
                engine.addBlockToStack(currBlock);
                engine.getCurrBlockPanel().setLocation(currBlock.x, currBlock.y);
                lblStackHeight.setText(String.valueOf(engine.getBlockStack().size()));
                lblBlockSpeed.setText(String.valueOf(Math.abs(Math.round(Block.xSpeed * 10d) / 10d)));
                engine.drawBlock(newBlock);
                engine.setPrevBlock(currBlock);
            } else if (engine.isAligned(engine.getCurrBlock())) {
                engine.addBlockToStack(currBlock);
                engine.getCurrBlockPanel().setLocation(currBlock.x, currBlock.y);
                lblStackHeight.setText(String.valueOf(engine.getBlockStack().size()));
                lblBlockSpeed.setText(String.valueOf(Math.abs(Math.round(Block.xSpeed * 10d) / 10d)));
                engine.drawBlock(newBlock);
                engine.setPrevBlock(currBlock);
            } else {
                try {
                    handleGameOver();
                } catch (IOException ex) {
                    Logger.getLogger(GameBoard.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_formKeyReleased

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewGameActionPerformed
        GamePanel.removeAll();
        //new GameBoard().setVisible(true);
        engine.getBlockStack().clear();
        gen++;
        engine.resetBlockSpeed();
        lblStackHeight.setText(String.valueOf(0));
        lblBlockSpeed.setText(String.valueOf(Math.abs(Math.round(Block.xSpeed * 10d) / 10d)));
        lblGen.setText(String.valueOf(gen));    
        drawBaseBlock();
    }//GEN-LAST:event_btnNewGameActionPerformed

    private void btnTrainAIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrainAIActionPerformed
        //JOptionPane.showMessageDialog(this, "Sorry chief this shit a'int done yet.\n\n\nJust keep playing...");
        ai.timer.start(); 
    }//GEN-LAST:event_btnTrainAIActionPerformed

    private void radNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNormalActionPerformed
        radHard.setSelected(false);
        radInsane.setSelected(false);
        radBroken.setSelected(false);
        Block.speedInc = 1.05;
        
    }//GEN-LAST:event_radNormalActionPerformed

    private void radHardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHardActionPerformed
        radNormal.setSelected(false);
        radInsane.setSelected(false);
        radBroken.setSelected(false);
        Block.speedInc = 1.15; 
    }//GEN-LAST:event_radHardActionPerformed

    private void radInsaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radInsaneActionPerformed
        radNormal.setSelected(false);
        radHard.setSelected(false);
        radBroken.setSelected(false);
        Block.speedInc = 1.25;
    }//GEN-LAST:event_radInsaneActionPerformed

    private void radBrokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBrokenActionPerformed
        radNormal.setSelected(false);
        radInsane.setSelected(false);
        radHard.setSelected(false);
        JOptionPane.showMessageDialog(this, "Broken mode is literally impossible! Good luck lmao");
        Block.speedInc = 2.5;
    }//GEN-LAST:event_radBrokenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GamePanel;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNewGame;
    private javax.swing.JButton btnTrainAI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblBlockSpeed;
    private javax.swing.JLabel lblGen;
    private javax.swing.JLabel lblHighScore;
    private javax.swing.JLabel lblStackHeight;
    private javax.swing.JPanel leftBorderPanel;
    private javax.swing.JRadioButton radBroken;
    private javax.swing.JRadioButton radHard;
    private javax.swing.JRadioButton radInsane;
    private javax.swing.JRadioButton radNormal;
    private javax.swing.JPanel rightBorderPanel;
    // End of variables declaration//GEN-END:variables

    public JPanel getGamePanel() {
        return GamePanel;
    }

    public JPanel getLeftBorderPanel() {
        return leftBorderPanel;
    }

    public JPanel getRightBorderPanel() {
        return rightBorderPanel;
    }

    }
